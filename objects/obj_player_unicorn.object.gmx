<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_unicorn</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
event_inherited();
velocityMax = 11;
useMagic = false;
magicObjective = noone;

magicSpeed = 8;
actionX = 0;
actionY = 0;
prevActionX = 0;
prevActionX = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move
event_inherited();

if (obj_input.activeUnicorn) {
    if (useMagic) {
        velocityX = lerp(velocityX, 0, deaceleration);
        
        var moveX = round(obj_input.axisX) * magicSpeed;
        var moveY = round(obj_input.axisY) * magicSpeed;
        actionX += moveX;
        actionY += moveY;
        
        if (instance_exists(magicObjective)){
            var playerOver = place_meeting(x,y+1,magicObjective);
        
            with (magicObjective) {
                var relX = x + moveX;
                var relY = y + moveY;
                var positionValid = place_meeting(relX, relY, obj_box) || place_meeting(relX, relY, obj_player);
                if (positionValid) {
                    other.useMagic = false;
                    other.magicObjective = noone;
                    actionX = other.prevActionX;
                    actionY = other.prevActionY;
                } else {
                    x += moveX;
                    y += moveY;
                
                    with(other) {
                        if (playerOver &amp;&amp; scr_availablePosition(x+moveX, y+moveY)) {
                            x += moveX;
                            y += moveY;
                        }
                    }
                }
            }
        
            prevActionX = actionX;
            prevActionY = actionY;
        }
    } else {
        var isStanding = !scr_availablePosition(x,y+1);

        if (isStanding) {
            var lerp_aceleration = 0;
            if (obj_input.tryToMove) lerp_aceleration =   aceleration;
                                else lerp_aceleration = deaceleration;
            velocityX = lerp(velocityX, obj_input.axisX * velocityMax, lerp_aceleration);
        }
    }
    
    if (obj_input.tryToAct) {
        if (useMagic) {
            magicObjective = instance_position(actionX,actionY,obj_box);
            useMagic = magicObjective != noone;
        } else {
            useMagic = true;
            actionX = x;
            actionY = y;
            prevActionX = actionX;
            prevActionY = actionY;
        }
    }
} else {
    velocityX = lerp(velocityX, 0, deaceleration);
    useMagic = false;
    magicObjective = noone;
}

velocityY += myGravity;
if (velocityY &gt; velocityMax)
    velocityY = velocityMax;
var xprev = x; var yprev = y;
scr_move(velocityX,velocityY);
if (xprev == x) velocityX = 0;
if (yprev == y) velocityY = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw self and magic
if (obj_input.activeUnicorn &amp;&amp; useMagic)
    draw_sprite(spr_pointer,0,actionX, actionY)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
